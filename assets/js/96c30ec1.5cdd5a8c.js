"use strict";(self.webpackChunkulinkcms_doc=self.webpackChunkulinkcms_doc||[]).push([[49],{637:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=s(4848),r=s(8453);const o={sidebar_position:2},t="Binary Level System",a={id:"Technology-Stack/User-Permissions/Level-System",title:"Binary Level System",description:"In this system, user permissions are managed using a binary representation. Each permission is assigned a unique bit within a binary number. By combining different permissions using bitwise operations, we can efficiently store and manage multiple permissions for a user in a single value.",source:"@site/docs/04-Technology-Stack/02-User-Permissions/02-Level-System.mdx",sourceDirName:"04-Technology-Stack/02-User-Permissions",slug:"/Technology-Stack/User-Permissions/Level-System",permalink:"/docs/Technology-Stack/User-Permissions/Level-System",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"documentsSidebar",previous:{title:"User Permissions Overview",permalink:"/docs/Technology-Stack/User-Permissions/Permissions"},next:{title:"Database Deletion",permalink:"/docs/Technology-Stack/Database-Deletion"}},l={},c=[{value:"Permission Structure",id:"permission-structure",level:2},{value:"User Group Permissions (UserGroupP)",id:"user-group-permissions-usergroupp",level:3},{value:"Club Information Permissions (ClubInformationP)",id:"club-information-permissions-clubinformationp",level:3},{value:"Club Attendance Permissions (ClubAttendancesP)",id:"club-attendance-permissions-clubattendancesp",level:3},{value:"Club Students Permissions (ClubStudentsP)",id:"club-students-permissions-clubstudentsp",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"binary-level-system",children:"Binary Level System"})}),"\n",(0,i.jsx)(n.p,{children:"In this system, user permissions are managed using a binary representation. Each permission is assigned a unique bit within a binary number. By combining different permissions using bitwise operations, we can efficiently store and manage multiple permissions for a user in a single value."}),"\n","\n",(0,i.jsx)(n.p,{children:"For example, the permissions for a user in the database are stored as:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "ClubStudentsP": 513,\n  "ClubAttendancesP": 149,\n  "UserGroupP": 130,\n  "ClubInformationP": 1\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Each of these numbers represents a combination of different permissions based on the binary value system. Let's break down how each of these permissions is structured using enumerations in Python."}),"\n",(0,i.jsx)(n.h2,{id:"permission-structure",children:"Permission Structure"}),"\n",(0,i.jsx)(n.h3,{id:"user-group-permissions-usergroupp",children:"User Group Permissions (UserGroupP)"}),"\n",(0,i.jsxs)(n.p,{children:["The following enum defines the permissions for user management. Each permission is a power of two, allowing multiple permissions to be combined using bitwise OR (",(0,i.jsx)(n.code,{children:"|"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class UserGroupP(Enum):\n  CHANGE_USERNAME_OWN = 1 << 0  # 1\n  CHANGE_PASSWORD_OWN = 1 << 1  # 2\n  BLOCK_ACCOUNT = 1 << 2  # 4\n  CHANGE_USERNAME_ALL = 1 << 3  # 8\n  CHANGE_PASSWORD_ALL = 1 << 4  # 16\n  DELETE_ACCOUNT = 1 << 5  # 32\n  CREATE_ACCOUNT = 1 << 6  # 64\n  VIEW_USER_OWN = 1 << 7  # 128\n  VIEW_USER_ALL = 1 << 8  # 256\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If a user has ",(0,i.jsx)(n.code,{children:"130"})," as their ",(0,i.jsx)(n.code,{children:"UserGroupP"})," value in the database, this value is derived from ",(0,i.jsx)(n.code,{children:"128 + 2"}),", which means the user has the following permissions:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"VIEW_USER_OWN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"CHANGE_PASSWORD_OWN"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"club-information-permissions-clubinformationp",children:"Club Information Permissions (ClubInformationP)"}),"\n",(0,i.jsx)(n.p,{children:"For club-related information, we have a similar structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ClubInformationP(Enum):\n  REQUEST_INFORMATION_OWN = 1 << 0  # 1\n  REVIEW_REQUEST = 1 << 1  # 2\n  BEHAVIOUR_POINT_OPERATION = 1 << 2  # 4\n  VIEW_INFORMATION_G1 = 1 << 3  # 8\n  VIEW_INFORMATION_G2 = 1 << 4  # 16\n  VIEW_INFORMATION_AS = 1 << 5  # 32\n  VIEW_INFORMATION_A2 = 1 << 6  # 64\n  VIEW_INFORMATION_IB = 1 << 7  # 128\n  REQUEST_INFORMATION_ALL = 1 << 8  # 256\n  VIEW_REQUEST_OWN = 1 << 9  # 512\n  VIEW_REQUEST_ALL = 1 << 10  # 1024\n  VIEW_INFORMATION_ALL = 1 << 11  # 2048\n  CREATE_CLUB = 1 << 12  # 4096\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For example, a user with a ",(0,i.jsx)(n.code,{children:"ClubInformationP"})," value of ",(0,i.jsx)(n.code,{children:"1"})," has the ",(0,i.jsx)(n.code,{children:"REQUEST_INFORMATION_OWN"})," permission."]}),"\n",(0,i.jsx)(n.h3,{id:"club-attendance-permissions-clubattendancesp",children:"Club Attendance Permissions (ClubAttendancesP)"}),"\n",(0,i.jsx)(n.p,{children:"Club attendance permissions are handled as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ClubAttendancesP(Enum):\n  TAKE_ATTENDANCE_OWN = 1 << 0  # 1\n  GRADE_CLUB = 1 << 1  # 2\n  REQUEST_LEAVE_OWN = 1 << 2  # 4\n  REVIEW_LEAVE = 1 << 3  # 8\n  VIEW_LEAVE_OWN = 1 << 4  # 16\n  TAKE_ATTENDANCE_ALL = 1 << 5  # 32\n  REQUEST_LEAVE_ALL = 1 << 6  # 64\n  REVIEW_GRADE_OWN = 1 << 7  # 128\n  REVIEW_GRADE_ALL = 1 << 8  # 256\n  VIEW_LEAVE_ALL = 1 << 9  # 512\n"})}),"\n",(0,i.jsxs)(n.p,{children:["With a value of ",(0,i.jsx)(n.code,{children:"149"}),", the user has ",(0,i.jsx)(n.code,{children:"128 + 16 + 4 + 1"}),", meaning:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"REVIEW_GRADE_OWN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"VIEW_LEAVE_OWN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"REQUEST_LEAVE_OWN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"TAKE_ATTENDANCE_OWN"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"club-students-permissions-clubstudentsp",children:"Club Students Permissions (ClubStudentsP)"}),"\n",(0,i.jsx)(n.p,{children:"Similarly, the student management permissions are structured as:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ClubStudentsP(Enum):\n  EDIT_STUDENT_OWN = 1 << 0  # 1\n  EDIT_STUDENT_INFORMATION = 1 << 1  # 2\n  EDIT_STUDENT_ALL = 1 << 2  # 4\n"})}),"\n",(0,i.jsxs)(n.p,{children:["A value of ",(0,i.jsx)(n.code,{children:"513"})," indicates that the user has ",(0,i.jsx)(n.code,{children:"512 + 1"})," permissions, meaning:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"EDIT_STUDENT_OWN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"EDIT_STUDENT_ALL"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"By using this binary system, permission management becomes more efficient and scalable. Each permission can be combined into a single value, allowing for easy storage and retrieval, while maintaining the flexibility to manage permissions individually through bitwise operations."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);